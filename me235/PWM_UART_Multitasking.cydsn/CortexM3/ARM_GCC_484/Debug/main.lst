ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC0:
  21 0000 0D0A0D0A 		.ascii	"\015\012\015\012PWM on. Use one of the following co"
  21      50574D20 
  21      6F6E2E20 
  21      55736520 
  21      6F6E6520 
  22 0027 6D6D616E 		.ascii	"mmands:\015\012\000"
  22      64733A0D 
  22      0A00
  23 0031 000000   		.align	2
  24              	.LC1:
  25 0034 53657420 		.ascii	"Set the duty cycle, as number of clock ticks, by ty"
  25      74686520 
  25      64757479 
  25      20637963 
  25      6C652C20 
  26 0067 70696E67 		.ascii	"ping d : then the number. \015\012\000"
  26      2064203A 
  26      20746865 
  26      6E207468 
  26      65206E75 
  27              		.align	2
  28              	.LC2:
  29 0084 53657420 		.ascii	"Set the period by typing p : then a new period. \015"
  29      74686520 
  29      70657269 
  29      6F642062 
  29      79207479 
  30 00b5 0A00     		.ascii	"\012\000"
  31 00b7 00       		.align	2
  32              	.LC3:
  33 00b8 466F7220 		.ascii	"For example, p : 2000 sets the period to 2000. \015"
  33      6578616D 
  33      706C652C 
  33      2070203A 
  33      20323030 
  34 00e8 0A00     		.ascii	"\012\000"
  35 00ea 0000     		.align	2
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 2


  36              	.LC4:
  37 00ec 4F722C20 		.ascii	"Or, x stops the PWM, and e re-enables the PWM. \015"
  37      78207374 
  37      6F707320 
  37      74686520 
  37      50574D2C 
  38 011c 0A0D0A00 		.ascii	"\012\015\012\000"
  39              		.section	.text.main,"ax",%progbits
  40              		.align	2
  41              		.global	main
  42              		.thumb
  43              		.thumb_func
  44              		.type	main, %function
  45              	main:
  46              	.LFB56:
  47              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Andrew P. Sabelhaus, 2018 
   4:.\main.c      ****  * See README and LICENSE for more details.
   5:.\main.c      ****  *
   6:.\main.c      ****  * ========================================
   7:.\main.c      **** */
   8:.\main.c      **** // For all the libraries on the PSoC itself
   9:.\main.c      **** #include <project.h>
  10:.\main.c      **** // Some code that Drew wrote to make the UART communication more easy to read.
  11:.\main.c      **** #include "uart_helper_fcns.h"
  12:.\main.c      **** 
  13:.\main.c      **** int main()
  14:.\main.c      **** {
  48              		.loc 1 14 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 00AF     		add	r7, sp, #0
  57              		.cfi_def_cfa_register 7
  15:.\main.c      ****     // enable all interrupts on the PSoC
  16:.\main.c      ****     CyGlobalIntEnable;
  58              		.loc 1 16 0
  59              	@ 16 ".\main.c" 1
  60 0004 62B6     		CPSIE   i
  61              	@ 0 "" 2
  17:.\main.c      ****     
  18:.\main.c      ****     /**
  19:.\main.c      ****      * TUTORIAL 8, CODING TASK 1:
  20:.\main.c      ****      * Start the PWM component, now that you've added it, configured its settings, and assigned its
  21:.\main.c      ****      */
  22:.\main.c      ****     
  23:.\main.c      ****     ///////////////// PUT YOUR CODE HERE
  24:.\main.c      ****     PWM_Servo_Start();
  62              		.loc 1 24 0
  63              		.thumb
  64 0006 FFF7FEFF 		bl	PWM_Servo_Start
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 3


  25:.\main.c      ****     
  26:.\main.c      ****     /**
  27:.\main.c      ****      * TUTORIAL 8, CODING TASK 4: 
  28:.\main.c      ****      * start the interrupt for the UART, setting the handler (ISR) to Interrupt_Handler_UART_Receiv
  29:.\main.c      ****      * hint: see tutorial 7. The function you want to use is ...StartEx( ), with Interrupt_Handler_
  30:.\main.c      ****      * The interrupt is named Interrupt_UART_Receive on the schematic.
  31:.\main.c      ****      */
  32:.\main.c      ****     
  33:.\main.c      ****     ////////////////// PUT YOUR CODE HERE
  34:.\main.c      ****     Interrupt_UART_Receive_StartEx( Interrupt_Handler_UART_Receive );
  65              		.loc 1 34 0
  66 000a 0A48     		ldr	r0, .L3
  67 000c FFF7FEFF 		bl	Interrupt_UART_Receive_StartEx
  35:.\main.c      ****     
  36:.\main.c      ****     // Start the UART 
  37:.\main.c      ****     UART_for_USB_Start();
  68              		.loc 1 37 0
  69 0010 FFF7FEFF 		bl	UART_for_USB_Start
  38:.\main.c      ****     
  39:.\main.c      ****     // Send an initial message over the UART / USB com port
  40:.\main.c      ****     UART_for_USB_PutString("\r\n\r\nPWM on. Use one of the following commands:\r\n");
  70              		.loc 1 40 0
  71 0014 0848     		ldr	r0, .L3+4
  72 0016 FFF7FEFF 		bl	UART_for_USB_PutString
  41:.\main.c      ****     UART_for_USB_PutString("Set the duty cycle, as number of clock ticks, by typing d : then the nu
  73              		.loc 1 41 0
  74 001a 0848     		ldr	r0, .L3+8
  75 001c FFF7FEFF 		bl	UART_for_USB_PutString
  42:.\main.c      ****     UART_for_USB_PutString("Set the period by typing p : then a new period. \r\n");
  76              		.loc 1 42 0
  77 0020 0748     		ldr	r0, .L3+12
  78 0022 FFF7FEFF 		bl	UART_for_USB_PutString
  43:.\main.c      ****     UART_for_USB_PutString("For example, p : 2000 sets the period to 2000. \r\n");
  79              		.loc 1 43 0
  80 0026 0748     		ldr	r0, .L3+16
  81 0028 FFF7FEFF 		bl	UART_for_USB_PutString
  44:.\main.c      ****     UART_for_USB_PutString("Or, x stops the PWM, and e re-enables the PWM. \r\n\r\n");
  82              		.loc 1 44 0
  83 002c 0648     		ldr	r0, .L3+20
  84 002e FFF7FEFF 		bl	UART_for_USB_PutString
  85              	.L2:
  45:.\main.c      ****     
  46:.\main.c      ****     for(;;)
  47:.\main.c      ****     {
  48:.\main.c      ****         // Nothing to do - all interrupt driven!
  49:.\main.c      ****     }
  86              		.loc 1 49 0 discriminator 1
  87 0032 FEE7     		b	.L2
  88              	.L4:
  89              		.align	2
  90              	.L3:
  91 0034 00000000 		.word	Interrupt_Handler_UART_Receive
  92 0038 00000000 		.word	.LC0
  93 003c 34000000 		.word	.LC1
  94 0040 84000000 		.word	.LC2
  95 0044 B8000000 		.word	.LC3
  96 0048 EC000000 		.word	.LC4
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 4


  97              		.cfi_endproc
  98              	.LFE56:
  99              		.size	main, .-main
 100              		.text
 101              	.Letext0:
 102              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 103              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.1\\psoc creator\\import\\gnu_cs\\arm\\4
 104              		.file 4 ".\\Generated_Source\\PSoC5/core_cm3.h"
 105              		.section	.debug_info,"",%progbits
 106              	.Ldebug_info0:
 107 0000 C0000000 		.4byte	0xc0
 108 0004 0400     		.2byte	0x4
 109 0006 00000000 		.4byte	.Ldebug_abbrev0
 110 000a 04       		.byte	0x4
 111 000b 01       		.uleb128 0x1
 112 000c 15010000 		.4byte	.LASF15
 113 0010 01       		.byte	0x1
 114 0011 45000000 		.4byte	.LASF16
 115 0015 81000000 		.4byte	.LASF17
 116 0019 00000000 		.4byte	.Ldebug_ranges0+0
 117 001d 00000000 		.4byte	0
 118 0021 00000000 		.4byte	.Ldebug_line0
 119 0025 02       		.uleb128 0x2
 120 0026 01       		.byte	0x1
 121 0027 06       		.byte	0x6
 122 0028 EF000000 		.4byte	.LASF0
 123 002c 02       		.uleb128 0x2
 124 002d 01       		.byte	0x1
 125 002e 08       		.byte	0x8
 126 002f 65000000 		.4byte	.LASF1
 127 0033 02       		.uleb128 0x2
 128 0034 02       		.byte	0x2
 129 0035 05       		.byte	0x5
 130 0036 0B010000 		.4byte	.LASF2
 131 003a 02       		.uleb128 0x2
 132 003b 02       		.byte	0x2
 133 003c 07       		.byte	0x7
 134 003d 0E000000 		.4byte	.LASF3
 135 0041 03       		.uleb128 0x3
 136 0042 FB000000 		.4byte	.LASF9
 137 0046 02       		.byte	0x2
 138 0047 37       		.byte	0x37
 139 0048 4C000000 		.4byte	0x4c
 140 004c 02       		.uleb128 0x2
 141 004d 04       		.byte	0x4
 142 004e 05       		.byte	0x5
 143 004f 78000000 		.4byte	.LASF4
 144 0053 02       		.uleb128 0x2
 145 0054 04       		.byte	0x4
 146 0055 07       		.byte	0x7
 147 0056 33000000 		.4byte	.LASF5
 148 005a 02       		.uleb128 0x2
 149 005b 08       		.byte	0x8
 150 005c 05       		.byte	0x5
 151 005d 00000000 		.4byte	.LASF6
 152 0061 02       		.uleb128 0x2
 153 0062 08       		.byte	0x8
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 5


 154 0063 07       		.byte	0x7
 155 0064 4E000000 		.4byte	.LASF7
 156 0068 04       		.uleb128 0x4
 157 0069 04       		.byte	0x4
 158 006a 05       		.byte	0x5
 159 006b 696E7400 		.ascii	"int\000"
 160 006f 02       		.uleb128 0x2
 161 0070 04       		.byte	0x4
 162 0071 07       		.byte	0x7
 163 0072 21000000 		.4byte	.LASF8
 164 0076 03       		.uleb128 0x3
 165 0077 91010000 		.4byte	.LASF10
 166 007b 03       		.byte	0x3
 167 007c 41       		.byte	0x41
 168 007d 41000000 		.4byte	0x41
 169 0081 02       		.uleb128 0x2
 170 0082 04       		.byte	0x4
 171 0083 04       		.byte	0x4
 172 0084 05010000 		.4byte	.LASF11
 173 0088 02       		.uleb128 0x2
 174 0089 08       		.byte	0x8
 175 008a 04       		.byte	0x4
 176 008b DB000000 		.4byte	.LASF12
 177 008f 02       		.uleb128 0x2
 178 0090 01       		.byte	0x1
 179 0091 08       		.byte	0x8
 180 0092 73000000 		.4byte	.LASF13
 181 0096 02       		.uleb128 0x2
 182 0097 04       		.byte	0x4
 183 0098 07       		.byte	0x7
 184 0099 99010000 		.4byte	.LASF14
 185 009d 05       		.uleb128 0x5
 186 009e 2E000000 		.4byte	.LASF18
 187 00a2 01       		.byte	0x1
 188 00a3 0D       		.byte	0xd
 189 00a4 68000000 		.4byte	0x68
 190 00a8 00000000 		.4byte	.LFB56
 191 00ac 4C000000 		.4byte	.LFE56-.LFB56
 192 00b0 01       		.uleb128 0x1
 193 00b1 9C       		.byte	0x9c
 194 00b2 06       		.uleb128 0x6
 195 00b3 E2000000 		.4byte	.LASF19
 196 00b7 04       		.byte	0x4
 197 00b8 1606     		.2byte	0x616
 198 00ba BE000000 		.4byte	0xbe
 199 00be 07       		.uleb128 0x7
 200 00bf 76000000 		.4byte	0x76
 201 00c3 00       		.byte	0
 202              		.section	.debug_abbrev,"",%progbits
 203              	.Ldebug_abbrev0:
 204 0000 01       		.uleb128 0x1
 205 0001 11       		.uleb128 0x11
 206 0002 01       		.byte	0x1
 207 0003 25       		.uleb128 0x25
 208 0004 0E       		.uleb128 0xe
 209 0005 13       		.uleb128 0x13
 210 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 6


 211 0007 03       		.uleb128 0x3
 212 0008 0E       		.uleb128 0xe
 213 0009 1B       		.uleb128 0x1b
 214 000a 0E       		.uleb128 0xe
 215 000b 55       		.uleb128 0x55
 216 000c 17       		.uleb128 0x17
 217 000d 11       		.uleb128 0x11
 218 000e 01       		.uleb128 0x1
 219 000f 10       		.uleb128 0x10
 220 0010 17       		.uleb128 0x17
 221 0011 00       		.byte	0
 222 0012 00       		.byte	0
 223 0013 02       		.uleb128 0x2
 224 0014 24       		.uleb128 0x24
 225 0015 00       		.byte	0
 226 0016 0B       		.uleb128 0xb
 227 0017 0B       		.uleb128 0xb
 228 0018 3E       		.uleb128 0x3e
 229 0019 0B       		.uleb128 0xb
 230 001a 03       		.uleb128 0x3
 231 001b 0E       		.uleb128 0xe
 232 001c 00       		.byte	0
 233 001d 00       		.byte	0
 234 001e 03       		.uleb128 0x3
 235 001f 16       		.uleb128 0x16
 236 0020 00       		.byte	0
 237 0021 03       		.uleb128 0x3
 238 0022 0E       		.uleb128 0xe
 239 0023 3A       		.uleb128 0x3a
 240 0024 0B       		.uleb128 0xb
 241 0025 3B       		.uleb128 0x3b
 242 0026 0B       		.uleb128 0xb
 243 0027 49       		.uleb128 0x49
 244 0028 13       		.uleb128 0x13
 245 0029 00       		.byte	0
 246 002a 00       		.byte	0
 247 002b 04       		.uleb128 0x4
 248 002c 24       		.uleb128 0x24
 249 002d 00       		.byte	0
 250 002e 0B       		.uleb128 0xb
 251 002f 0B       		.uleb128 0xb
 252 0030 3E       		.uleb128 0x3e
 253 0031 0B       		.uleb128 0xb
 254 0032 03       		.uleb128 0x3
 255 0033 08       		.uleb128 0x8
 256 0034 00       		.byte	0
 257 0035 00       		.byte	0
 258 0036 05       		.uleb128 0x5
 259 0037 2E       		.uleb128 0x2e
 260 0038 00       		.byte	0
 261 0039 3F       		.uleb128 0x3f
 262 003a 19       		.uleb128 0x19
 263 003b 03       		.uleb128 0x3
 264 003c 0E       		.uleb128 0xe
 265 003d 3A       		.uleb128 0x3a
 266 003e 0B       		.uleb128 0xb
 267 003f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 7


 268 0040 0B       		.uleb128 0xb
 269 0041 49       		.uleb128 0x49
 270 0042 13       		.uleb128 0x13
 271 0043 11       		.uleb128 0x11
 272 0044 01       		.uleb128 0x1
 273 0045 12       		.uleb128 0x12
 274 0046 06       		.uleb128 0x6
 275 0047 40       		.uleb128 0x40
 276 0048 18       		.uleb128 0x18
 277 0049 9642     		.uleb128 0x2116
 278 004b 19       		.uleb128 0x19
 279 004c 00       		.byte	0
 280 004d 00       		.byte	0
 281 004e 06       		.uleb128 0x6
 282 004f 34       		.uleb128 0x34
 283 0050 00       		.byte	0
 284 0051 03       		.uleb128 0x3
 285 0052 0E       		.uleb128 0xe
 286 0053 3A       		.uleb128 0x3a
 287 0054 0B       		.uleb128 0xb
 288 0055 3B       		.uleb128 0x3b
 289 0056 05       		.uleb128 0x5
 290 0057 49       		.uleb128 0x49
 291 0058 13       		.uleb128 0x13
 292 0059 3F       		.uleb128 0x3f
 293 005a 19       		.uleb128 0x19
 294 005b 3C       		.uleb128 0x3c
 295 005c 19       		.uleb128 0x19
 296 005d 00       		.byte	0
 297 005e 00       		.byte	0
 298 005f 07       		.uleb128 0x7
 299 0060 35       		.uleb128 0x35
 300 0061 00       		.byte	0
 301 0062 49       		.uleb128 0x49
 302 0063 13       		.uleb128 0x13
 303 0064 00       		.byte	0
 304 0065 00       		.byte	0
 305 0066 00       		.byte	0
 306              		.section	.debug_aranges,"",%progbits
 307 0000 1C000000 		.4byte	0x1c
 308 0004 0200     		.2byte	0x2
 309 0006 00000000 		.4byte	.Ldebug_info0
 310 000a 04       		.byte	0x4
 311 000b 00       		.byte	0
 312 000c 0000     		.2byte	0
 313 000e 0000     		.2byte	0
 314 0010 00000000 		.4byte	.LFB56
 315 0014 4C000000 		.4byte	.LFE56-.LFB56
 316 0018 00000000 		.4byte	0
 317 001c 00000000 		.4byte	0
 318              		.section	.debug_ranges,"",%progbits
 319              	.Ldebug_ranges0:
 320 0000 00000000 		.4byte	.LFB56
 321 0004 4C000000 		.4byte	.LFE56
 322 0008 00000000 		.4byte	0
 323 000c 00000000 		.4byte	0
 324              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 8


 325              	.Ldebug_line0:
 326 0000 69010000 		.section	.debug_str,"MS",%progbits,1
 326      02004401 
 326      00000201 
 326      FB0E0D00 
 326      01010101 
 327              	.LASF6:
 328 0000 6C6F6E67 		.ascii	"long long int\000"
 328      206C6F6E 
 328      6720696E 
 328      7400
 329              	.LASF3:
 330 000e 73686F72 		.ascii	"short unsigned int\000"
 330      7420756E 
 330      7369676E 
 330      65642069 
 330      6E7400
 331              	.LASF8:
 332 0021 756E7369 		.ascii	"unsigned int\000"
 332      676E6564 
 332      20696E74 
 332      00
 333              	.LASF18:
 334 002e 6D61696E 		.ascii	"main\000"
 334      00
 335              	.LASF5:
 336 0033 6C6F6E67 		.ascii	"long unsigned int\000"
 336      20756E73 
 336      69676E65 
 336      6420696E 
 336      7400
 337              	.LASF16:
 338 0045 2E5C6D61 		.ascii	".\\main.c\000"
 338      696E2E63 
 338      00
 339              	.LASF7:
 340 004e 6C6F6E67 		.ascii	"long long unsigned int\000"
 340      206C6F6E 
 340      6720756E 
 340      7369676E 
 340      65642069 
 341              	.LASF1:
 342 0065 756E7369 		.ascii	"unsigned char\000"
 342      676E6564 
 342      20636861 
 342      7200
 343              	.LASF13:
 344 0073 63686172 		.ascii	"char\000"
 344      00
 345              	.LASF4:
 346 0078 6C6F6E67 		.ascii	"long int\000"
 346      20696E74 
 346      00
 347              	.LASF17:
 348 0081 443A5C73 		.ascii	"D:\\synct\\Teaching\\ME 135 S18\\Tutorials\\T8\\ske"
 348      796E6374 
 348      5C546561 
ARM GAS  C:\Users\andre\AppData\Local\Temp\ccXvS15y.s 			page 9


 348      6368696E 
 348      675C4D45 
 349 00ae 6C65746F 		.ascii	"leton_code\\me235\\PWM_UART_Multitasking.cydsn\000"
 349      6E5F636F 
 349      64655C6D 
 349      65323335 
 349      5C50574D 
 350              	.LASF12:
 351 00db 646F7562 		.ascii	"double\000"
 351      6C6500
 352              	.LASF19:
 353 00e2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 353      52784275 
 353      66666572 
 353      00
 354              	.LASF0:
 355 00ef 7369676E 		.ascii	"signed char\000"
 355      65642063 
 355      68617200 
 356              	.LASF9:
 357 00fb 5F5F696E 		.ascii	"__int32_t\000"
 357      7433325F 
 357      7400
 358              	.LASF11:
 359 0105 666C6F61 		.ascii	"float\000"
 359      7400
 360              	.LASF2:
 361 010b 73686F72 		.ascii	"short int\000"
 361      7420696E 
 361      7400
 362              	.LASF15:
 363 0115 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 363      4320342E 
 363      382E3420 
 363      32303134 
 363      30353236 
 364 0148 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 364      20726576 
 364      6973696F 
 364      6E203231 
 364      31333538 
 365 017b 30202D66 		.ascii	"0 -ffunction-sections\000"
 365      66756E63 
 365      74696F6E 
 365      2D736563 
 365      74696F6E 
 366              	.LASF10:
 367 0191 696E7433 		.ascii	"int32_t\000"
 367      325F7400 
 368              	.LASF14:
 369 0199 73697A65 		.ascii	"sizetype\000"
 369      74797065 
 369      00
 370              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
